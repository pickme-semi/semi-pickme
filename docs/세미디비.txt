------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
-- 관리자 계정 : 유저 생성
CREATE USER PICKMEUSER identified by PICKMEPASS;

-- 권한부여
GRANT RESOURCE, CONNECT TO PICKMEUSER;

------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------


------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
-- PIMEUSER 계정
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
-- TABLE COMMENT ADD
-- comment ON TABLE 테이블명 IS '설명';
-- COLUMN COMMENT ADD
-- comment ON COLUMN 테이블명.필드명 IS '설명';
-- TABLE COMMENT DELETE 
-- comment ON TABLE 테이블명 IS ''
-- TABLE COMMENT SELECT
-- SELECT * FROM ALL_COL_COMMENTS WHERE TABLE_NAME = '테이블명';

-- 사용자 코드 테이블
-- EX) ID : COMPANY, VAL : 회사
-- EX) ID : ADMIN, VAL : 관리자
DROP TABLE PM_CODE_TB;
CREATE TABLE PM_CODE_TB(
    ID VARCHAR2(50) PRIMARY KEY,
    VAL VARCHAR2(50) NOT NULL
);
comment ON TABLE PM_CODE_TB IS '프로젝트 코드 정의 테이블';
comment ON COLUMN PM_CODE_TB.ID IS '코드 구분값 ID';
comment ON COLUMN PM_CODE_TB.VAL IS '코드값';


-- 사용자 정보 테이블
DROP TABLE PM_USER_TB;
CREATE TABLE PM_USER_TB(
    NO NUMBER NOT NULL PRIMARY KEY,
    ID VARCHAR2(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(200) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    NAME VARCHAR2(50) NOT NULL,
    BIRTHDATE DATE,
    GENDER CHAR(1) CHECK(GENDER IN ('M','F')),
    TYPE VARCHAR2(50) CONSTRAINT FK_TYPE REFERENCES PM_CODE_TB(ID)
);

DROP SEQUENCE SEQ_USER;
CREATE SEQUENCE SEQ_USER START WITH 1 INCREMENT BY 1;

comment ON TABLE PM_USER_TB IS '사용자 정보 테이블';
comment ON COLUMN PM_USER_TB.NO IS '사용자 구분 번호';
comment ON COLUMN PM_USER_TB.ID IS '사용자 로그인 ID';
comment ON COLUMN PM_USER_TB.PASSWORD IS '사용자 로그인 비밀번호';
comment ON COLUMN PM_USER_TB.EMAIL IS '사용자 이메일';
comment ON COLUMN PM_USER_TB.NAME IS '사용자 이름';
comment ON COLUMN PM_USER_TB.BIRTHDATE IS '생년월일, 가입 후 설정 가능';
comment ON COLUMN PM_USER_TB.GENDER IS '성별( M or F), 가입 후 설정 가능';
comment ON COLUMN PM_USER_TB.TYPE IS '사용자 타입(일반,관리자,기업), 코드 테이블 참조';

-- 팔로워 테이블
-- Ex) A가 B를 팔로우 했다
-- FOLLOW : B, FOLLOWING : A
DROP TABLE PM_FOLLOW_TB;
CREATE TABLE PM_FOLLOW_TB(
    FOLLOW NUMBER CONSTRAINT FK_FOLLOW REFERENCES PM_USER_TB(NO),
    FOLLOWING NUMBER CONSTRAINT FK_FOLLOWING REFERENCES PM_USER_TB(NO),
    CONSTRAINT PK_FOLLOW PRIMARY KEY (FOLLOW,FOLLOWING)
);

COMMENT ON TABLE PM_FOLLOW_TB IS '사용자간 팔로우 테이블';
COMMENT ON COLUMN PM_FOLLOW_TB.FOLLOW IS '내가 팔로우한 사용자';
COMMENT ON COLUMN PM_FOLLOW_TB.FOLLOWING IS '나를 팔로우한 사용자';

-- 카테고리 테이블
DROP TABLE PM_CATEGORY_TB;
CREATE TABLE PM_CATEGORY_TB(
    ID NUMBER PRIMARY KEY,
    PARENT_ID NUMBER CONSTRAINT FK_PARENT REFERENCES PM_CATEGORY_TB(ID),
    NAME VARCHAR2(50) NOT NULL UNIQUE
);

DROP SEQUENCE SEQ_CATEGORY;
CREATE SEQUENCE SEQ_CATEGORY START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_CATEGORY_TB IS '카테고리 분류 테이블';
COMMENT ON COLUMN PM_CATEGORY_TB.ID IS '카테고리 ID';
COMMENT ON COLUMN PM_CATEGORY_TB.PARENT_ID IS '부모 카테고리 ID';
COMMENT ON COLUMN PM_CATEGORY_TB.NAME IS '카테고리명';

-- 질문 게시판 테이블
DROP TABLE PM_QUESTION_TB;
CREATE TABLE PM_QUESTION_TB(
    ID NUMBER PRIMARY KEY,
    TITLE VARCHAR2(255) NOT NULL,
    CONTENT VARCHAR2(1000) NOT NULL,
    STATUS VARCHAR2(50) CONSTRAINT FK_STATUS REFERENCES PM_CODE_TB(ID),
    QDATE DATE NOT NULL,
    USER_NO NUMBER CONSTRAINT FK_USER REFERENCES PM_USER_TB(NO)
);

DROP SEQUENCE SEQ_QUESTION;
CREATE SEQUENCE SEQ_QUESTION START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_QUESTION_TB IS '질문 게시판 테이블';

COMMENT ON COLUMN PM_QUESTION_TB.ID IS '질문 게시물 구분 ID';
COMMENT ON COLUMN PM_QUESTION_TB.TITLE IS '질문 게시물 제목';
COMMENT ON COLUMN PM_QUESTION_TB.CONTENT IS '질문 게시물 내용';
COMMENT ON COLUMN PM_QUESTION_TB.STATUS IS '게시물 상태';
COMMENT ON COLUMN PM_QUESTION_TB.QDATE IS '게시물 등록일';
COMMENT ON COLUMN PM_QUESTION_TB.USER_NO IS '사용자 번호';


-- 픽 테이블
DROP TABLE PM_PICK_TB;
CREATE TABLE PM_PICK_TB(
    ID NUMBER PRIMARY KEY,
    SELECT_1 VARCHAR2(255) NOT NULL,
    SELECT_2 VARCHAR2(255) NOT NULL,
    TITLE VARCHAR2(255) NOT NULL,
    CONTENT VARCHAR2(1000) NOT NULL,
    ENROLL_DATE DATE NOT NULL,
    VIEW_COUNT NUMBER DEFAULT 0,
    DUE_DATE DATE NOT NULL,
    TYPE VARCHAR2(50) CONSTRAINT FK_PICK_TYPE REFERENCES PM_CODE_TB(ID) NOT NULL
);

DROP SEQUENCE SEQ_PICK;
CREATE SEQUENCE SEQ_PICK START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_PICK_TB IS '픽 등록 게시물 정의';

COMMENT ON COLUMN PM_PICK_TB.ID IS '픽 게시물 구분 ID';
COMMENT ON COLUMN PM_PICK_TB.SELECT_1 IS '선택 게시물 1 파일 주소';
COMMENT ON COLUMN PM_PICK_TB.SELECT_2 IS '선택 게시물 2 파일 주소';
COMMENT ON COLUMN PM_PICK_TB.TITLE IS '제목';
COMMENT ON COLUMN PM_PICK_TB.CONTENT IS '내용';
COMMENT ON COLUMN PM_PICK_TB.ENROLL_DATE IS '등록일';
COMMENT ON COLUMN PM_PICK_TB.VIEW_COUNT IS '조회수';
COMMENT ON COLUMN PM_PICK_TB.DUE_DATE IS '유효기간';
COMMENT ON COLUMN PM_PICK_TB.TYPE IS '게시물 상태 코드';

-- 신고 기본 카테고리 정의
DROP TABLE PM_REPORT_CATEGORY_TB;
CREATE TABLE PM_REPORT_CATEGORY_TB(
    ID NUMBER PRIMARY KEY,
    CONTENT VARCHAR2(1000) NOT NULL
);

DROP SEQUENCE SEQ_RC;
CREATE SEQUENCE SEQ_RC START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_REPORT_CATEGORY_TB IS '신고 기본 카테고리 정의';
COMMENT ON COLUMN PM_REPORT_CATEGORY_TB.ID IS '신고 카테고리 구분 ID';
COMMENT ON COLUMN PM_REPORT_CATEGORY_TB.CONTENT IS '신고 카테고리 내용';


-- 신고 게시판 테이블
DROP TABLE PM_REPORT_TB;
CREATE TABLE PM_REPORT_TB(
    ID NUMBER PRIMARY KEY,
    PICK_ID NUMBER CONSTRAINT FK_REPORT_PICK REFERENCES PM_PICK_TB(ID) NOT NULL,
    REPORT_CATEGORY_ID NUMBER CONSTRAINT FK_REPORT_CATEGORY REFERENCES PM_REPORT_CATEGORY_TB(ID) NOT NULL,
    USER_NO NUMBER CONSTRAINT FK_REPORT_USER REFERENCES PM_USER_TB(NO) NOT NULL,
    DETAIL_CONTENT VARCHAR2(1000) NOT NULL,
    STATUS VARCHAR2(50) CONSTRAINT FK_REPORT_STATUS REFERENCES PM_CODE_TB(ID) NOT NULL,
    ENROLL_DATE DATE NOT NULL
);

DROP SEQUENCE SEQ_REPORT;
CREATE SEQUENCE SEQ_REPORT START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_REPORT_TB IS '신고 게시판 테이블';
COMMENT ON COLUMN PM_REPORT_TB.ID IS '신고 게시물 구분 ID';
COMMENT ON COLUMN PM_REPORT_TB.PICK_ID IS '신고된 픽 ID';
COMMENT ON COLUMN PM_REPORT_TB.REPORT_CATEGORY_ID IS '신고된 카테고리';
COMMENT ON COLUMN PM_REPORT_TB.USER_NO IS '신고자';
COMMENT ON COLUMN PM_REPORT_TB.DETAIL_CONTENT IS '상세 신고 내용';
COMMENT ON COLUMN PM_REPORT_TB.STATUS IS '신고 처리 여부';
COMMENT ON COLUMN PM_REPORT_TB.ENROLL_DATE IS '등록일';

-- 포인트 획득or 사용 내용 정의 테이블
DROP TABLE PM_POINT_CONTENT_TB;
CREATE TABLE PM_POINT_CONTENT_TB(
    ID NUMBER PRIMARY KEY,
    CONTENT VARCHAR2(1000) NOT NULL
);

DROP SEQUENCE SEQ_PC;
CREATE SEQUENCE SEQ_PC START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_POINT_CONTENT_TB IS '포인트 획득or 사용 내용 정의 테이블';

COMMENT ON COLUMN PM_POINT_CONTENT_TB.ID IS '포인트 내용 구분 ID';
COMMENT ON COLUMN PM_POINT_CONTENT_TB.CONTENT IS '포인트 획득or 사용 내용';

-- 포인트 테이블
DROP TABLE PM_POINT_HISTORY_TB;
CREATE TABLE PM_POINT_HISTORY_TB(
    ID NUMBER PRIMARY KEY,
    USER_NO NUMBER CONSTRAINT FK_POINT_USER REFERENCES PM_USER_TB(NO) NOT NULL,
    POINT_DATE DATE NOT NULL,
    BEFORE_POINT NUMBER NOT NULL,
    POINT NUMBER NOT NULL,
    AFTER_POINT NUMBER NOT NULL,
    POINT_CONTENT_ID NUMBER CONSTRAINT FK_POINT_CONTENT REFERENCES  PM_POINT_CONTENT_TB(ID),
    STATUS VARCHAR2(50) CONSTRAINT FK_POINT_STATUS_CODE REFERENCES PM_CODE_TB(ID)
);

DROP SEQUENCE SEQ_PH;
CREATE SEQUENCE SEQ_PH START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_POINT_HISTORY_TB IS '포인트 히스토리 정의';

COMMENT ON COLUMN PM_POINT_HISTORY_TB.ID IS '포인트 히스토리 구분 ID';
COMMENT ON COLUMN PM_POINT_HISTORY_TB.USER_NO IS '사용 유저 번호';
COMMENT ON COLUMN PM_POINT_HISTORY_TB.POINT_DATE IS '사용or획득 일시';
COMMENT ON COLUMN PM_POINT_HISTORY_TB.BEFORE_POINT IS '사용or획득전 포인트';
COMMENT ON COLUMN PM_POINT_HISTORY_TB.POINT IS '사용or획득 포인트';
COMMENT ON COLUMN PM_POINT_HISTORY_TB.AFTER_POINT IS '사용or획득 후 포인트';
COMMENT ON COLUMN PM_POINT_HISTORY_TB.POINT_CONTENT_ID IS '사용or획득 내역';
COMMENT ON COLUMN PM_POINT_HISTORY_TB.STATUS IS '사용or획득 구분';

-- 픽 선택 결과 테이블
DROP TABLE PM_RESULT_TB;
CREATE TABLE PM_RESULT_TB(
    PICK_ID NUMBER CONSTRAINT FK_PICK_RESULT REFERENCES PM_PICK_TB(ID) NOT NULL,
    USER_NO NUMBER CONSTRAINT FK_PICK_USER REFERENCES PM_USER_TB(NO) NOT NULL,
    RESULT NUMBER CHECK(RESULT IN ( 1, 2)) NOT NULL,
    ENROLL_DATE DATE NOT NULL,
    CONSTRAINT PK_RESULT PRIMARY KEY (PICK_ID, USER_NO)
);

COMMENT ON TABLE PM_RESULT_TB IS '픽 선택 히스토리 테이블';

COMMENT ON COLUMN PM_RESULT_TB.PICK_ID IS '선택 픽 ID';
COMMENT ON COLUMN PM_RESULT_TB.USER_NO IS '선택 유저 NO';
COMMENT ON COLUMN PM_RESULT_TB.RESULT IS '선택 결과(1or2)';
COMMENT ON COLUMN PM_RESULT_TB.ENROLL_DATE IS '선택일';

-- 댓글 테이블
DROP TABLE PM_COMMENT_TB;
CREATE TABLE PM_COMMENT_TB(
    ID NUMBER PRIMARY KEY,
    USER_NO NUMBER CONSTRAINT FK_COMMENT_USER REFERENCES PM_USER_TB(NO) NOT NULL,
    PICK_ID NUMBER CONSTRAINT FK_COMMENT_PICK REFERENCES PM_PICK_TB(ID) NOT NULL,
    CONTENT VARCHAR2(1000) NOT NULL,
    CLEVEL NUMBER DEFAULT 1 CHECK(CLEVEL IN (1,2)),
    ENROLL_DATE DATE NOT NULL
);

DROP SEQUENCE SEQ_COMMENT;
CREATE SEQUENCE SEQ_COMMENT START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_COMMENT_TB IS '댓글 테이블';

COMMENT ON COLUMN PM_COMMENT_TB.ID IS '댓글 ID';
COMMENT ON COLUMN PM_COMMENT_TB.USER_NO IS '작성자';
COMMENT ON COLUMN PM_COMMENT_TB.PICK_ID IS '댓글의 원 게시물';
COMMENT ON COLUMN PM_COMMENT_TB.CONTENT IS '댓글 내용';
COMMENT ON COLUMN PM_COMMENT_TB.CLEVEL IS '댓글레벨 (한번의 답글만 허용)';
COMMENT ON COLUMN PM_COMMENT_TB.ENROLL_DATE IS '작성일';


-- 질문 답변 테이블
-- 한질문에 여러 답변이 달릴수 있다.
DROP TABLE PM_QUESTION_ANSWER_TB;
CREATE TABLE PM_QUESTION_ANSWER_TB(
    ID NUMBER PRIMARY KEY,
    QUESTION_ID NUMBER CONSTRAINT FK_QUESTION_ID REFERENCES PM_QUESTION_TB(ID) NOT NULL,
    USER_NO NUMBER CONSTRAINT FK_ANSWER_USER REFERENCES PM_USER_TB(NO) NOT NULL,
    ENROLL_DATE DATE NOT NULL,
    CONTENT VARCHAR2(1000) NOT NULL
);

DROP SEQUENCE SEQ_QA;
CREATE SEQUENCE SEQ_QA START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_QUESTION_ANSWER_TB IS '질문 답변 테이블';

COMMENT ON COLUMN PM_QUESTION_ANSWER_TB.ID IS '답변 ID';
COMMENT ON COLUMN PM_QUESTION_ANSWER_TB.QUESTION_ID IS '질문 ID';
COMMENT ON COLUMN PM_QUESTION_ANSWER_TB.USER_NO IS '답변자';
COMMENT ON COLUMN PM_QUESTION_ANSWER_TB.ENROLL_DATE IS '답변 등록일';
COMMENT ON COLUMN PM_QUESTION_ANSWER_TB.CONTENT IS '내용';

-- 회원의 카테고리 설정 테이블
DROP TABLE PM_USER_CATEGORY_TB;
CREATE TABLE PM_USER_CATEGORY_TB(
    ID NUMBER PRIMARY KEY,
    USER_NO NUMBER CONSTRAINT FK_USER_CATEGORY REFERENCES PM_USER_TB(NO) NOT NULL,
    CATEGORY_ID NUMBER CONSTRAINT FK_CATEGORY_ID REFERENCES PM_CATEGORY_TB(ID) NOT NULL,
    ENROLL_DATE DATE NOT NULL
);

DROP SEQUENCE SEQ_UC;
CREATE SEQUENCE SEQ_UC START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_USER_CATEGORY_TB IS  '회원의 카테고리 설정 테이블';

COMMENT ON COLUMN PM_USER_CATEGORY_TB.ID IS '구분 ID';
COMMENT ON COLUMN PM_USER_CATEGORY_TB.USER_NO IS '설정한 유저 번호';
COMMENT ON COLUMN PM_USER_CATEGORY_TB.CATEGORY_ID IS '설정한 카테고리 ID';
COMMENT ON COLUMN PM_USER_CATEGORY_TB.ENROLL_DATE IS '등록일';


-- 좋아요 히스토리
DROP TABLE PM_LIKE_TB;
CREATE TABLE PM_LIKE_TB(
    ID NUMBER PRIMARY KEY,
    COMMENT_ID NUMBER CONSTRAINT FK_COMMENT_LIKE REFERENCES PM_COMMENT_TB(ID),
    USER_NO NUMBER CONSTRAINT FK_LIKE_USER REFERENCES PM_USER_TB(NO),
    STATUS VARCHAR2(50) CONSTRAINT FK_LIKE_STATUS REFERENCES PM_CODE_TB(ID)
);

DROP SEQUENCE SEQ_LIKE;
CREATE SEQUENCE SEQ_LIKE START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_LIKE_TB IS '좋아요 히스토리 테이블';

COMMENT ON COLUMN PM_LIKE_TB.ID IS '좋아요 히스토리 ID';
COMMENT ON COLUMN PM_LIKE_TB.COMMENT_ID IS '좋아요한 댓글 ID';
COMMENT ON COLUMN PM_LIKE_TB.USER_NO IS '좋아요한 사용자';
COMMENT ON COLUMN PM_LIKE_TB.STATUS IS '좋아요 상태(취소할때 지우지 않고 변경)';

-- 픽의 카테고리 설정 테이블
DROP TABLE PM_PICK_CATEGORY_TB;
CREATE TABLE PM_PICK_CATEGORY_TB(
    ID NUMBER PRIMARY KEY,
    PICK_ID NUMBER CONSTRAINT FK_PICK_CATEGORY REFERENCES PM_PICK_TB(ID) NOT NULL,
    CATEGORY_ID NUMBER CONSTRAINT FK_CATEGORY REFERENCES PM_CATEGORY_TB(ID) NOT NULL
);

DROP SEQUENCE SEQ_PICKCATE;
CREATE SEQUENCE SEQ_PICKCATE START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_PICK_CATEGORY_TB IS '픽의 카테고리 설정 테이블';

COMMENT ON COLUMN PM_PICK_CATEGORY_TB.ID IS '구분 ID';
COMMENT ON COLUMN PM_PICK_CATEGORY_TB.PICK_ID IS '카테고리가 설정된 픽의 ID';
COMMENT ON COLUMN PM_PICK_CATEGORY_TB.CATEGORY_ID IS '픽에 설정된 카테고리 ID';


-- 신고게시물 답변 테이블
DROP TABLE PM_REPORT_ANSWER_TB;
CREATE TABLE PM_REPORT_ANSWER_TB(
    ID NUMBER PRIMARY KEY,
    REPORT_ID NUMBER CONSTRAINT FK_REPORT_ID REFERENCES PM_REPORT_TB,
    USER_NO NUMBER CONSTRAINT FK_REPORT_ANSWER_USER REFERENCES PM_USER_TB(NO) NOT NULL,
    ENROLL_DATE DATE NOT NULL,
    CONTENT VARCHAR2(1000) NOT NULL
);

DROP SEQUENCE SEQ_RA;
CREATE SEQUENCE SEQ_RA START WITH 1 INCREMENT BY 1;

COMMENT ON TABLE PM_REPORT_ANSWER_TB IS '신고게시물 답변 테이블';

COMMENT ON COLUMN PM_REPORT_ANSWER_TB.ID IS '답변 구분 ID';
COMMENT ON COLUMN PM_REPORT_ANSWER_TB.REPORT_ID IS '신고게시물 ID';
COMMENT ON COLUMN PM_REPORT_ANSWER_TB.USER_NO IS '답변자';
COMMENT ON COLUMN PM_REPORT_ANSWER_TB.ENROLL_DATE IS '등록일';
COMMENT ON COLUMN PM_REPORT_ANSWER_TB.CONTENT IS '내용';

COMMIT;

-- 최초 디비에서 수정된것
ALTER TABLE PM_USER_TB ADD (PROFILE VARCHAR2(255));
COMMENT ON COLUMN PM_USER_TB.PROFILE IS '프로필사진 위치 저장';

COMMIT;




















